[{"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\App.tsx":"1","C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\index.tsx":"2","C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\apollo.ts":"3","C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\reportWebVitals.ts":"4","C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\routers\\logged-out-router.tsx":"5","C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\routers\\logged-in-router.tsx":"6","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\index.tsx":"7","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\apollo.ts":"8","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\reportWebVitals.ts":"9","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\App.tsx":"10","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\routers\\logged-out-router.tsx":"11","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\routers\\logged-in-router.tsx":"12","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\login.tsx":"13","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\form-error.tsx":"14","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\constants.ts":"15","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\create-user.tsx":"16","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\button.tsx":"17","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\__generated__\\globalTypes.ts":"18","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\listener\\podcasts.tsx":"19","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\404.tsx":"20","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\header.tsx":"21","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\hooks\\useMe.tsx":"22","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\listener\\podcast.tsx":"23"},{"size":419,"mtime":1611540488550,"results":"24","hashOfConfig":"25"},{"size":645,"mtime":1611536064063,"results":"26","hashOfConfig":"25"},{"size":269,"mtime":1611540555033,"results":"27","hashOfConfig":"25"},{"size":425,"mtime":1611534902820,"results":"28","hashOfConfig":"25"},{"size":93,"mtime":1611539180630,"results":"29","hashOfConfig":"25"},{"size":91,"mtime":1611539163787,"results":"30","hashOfConfig":"25"},{"size":777,"mtime":1611830890609,"results":"31","hashOfConfig":"32"},{"size":1073,"mtime":1611816330325,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1611534902820,"results":"34","hashOfConfig":"32"},{"size":399,"mtime":1611542327229,"results":"35","hashOfConfig":"32"},{"size":570,"mtime":1611817677643,"results":"36","hashOfConfig":"32"},{"size":993,"mtime":1612152172913,"results":"37","hashOfConfig":"32"},{"size":3611,"mtime":1611840495600,"results":"38","hashOfConfig":"32"},{"size":250,"mtime":1611544422559,"results":"39","hashOfConfig":"32"},{"size":52,"mtime":1612140933801,"results":"40","hashOfConfig":"32"},{"size":4661,"mtime":1611840264355,"results":"41","hashOfConfig":"32"},{"size":513,"mtime":1611839947972,"results":"42","hashOfConfig":"32"},{"size":735,"mtime":1612157024681,"results":"43","hashOfConfig":"32"},{"size":1124,"mtime":1612161505493,"results":"44","hashOfConfig":"32"},{"size":603,"mtime":1612141452201,"results":"45","hashOfConfig":"32"},{"size":710,"mtime":1612158555436,"results":"46","hashOfConfig":"32"},{"size":282,"mtime":1611818454486,"results":"47","hashOfConfig":"32"},{"size":1486,"mtime":1612161610947,"results":"48","hashOfConfig":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17x3fb3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"agjs4d",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\App.tsx",[],"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\index.tsx",[],["98","99"],"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\apollo.ts",[],"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\reportWebVitals.ts",[],"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\md2eo\\desktop\\nuber-eats-challenge-front\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\index.tsx",[],["100","101"],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\apollo.ts",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\reportWebVitals.ts",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\App.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\login.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\form-error.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\constants.ts",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\create-user.tsx",["102"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport {\r\n  createUserMutation,\r\n  createUserMutationVariables,\r\n} from \"../__generated__/createUserMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation createUserMutation($createUserInput: CreateUserInput!) {\r\n    createUser(input: $createUserInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateUserForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n  resultError?: string;\r\n}\r\n\r\nexport const CreateUser = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    handleSubmit,\r\n    errors,\r\n    formState,\r\n  } = useForm<ICreateUserForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Host,\r\n    },\r\n  });\r\n  const history = useHistory();\r\n  const onCompleted = (data: createUserMutation) => {\r\n    const {\r\n      createUser: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createUserMutation, { data: createUserResult, loading }] = useMutation<\r\n    createUserMutation,\r\n    createUserMutationVariables\r\n  >(CREATE_USER_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createUserMutation({\r\n        variables: {\r\n          createUserInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"canvas\">\r\n      <Helmet>\r\n        <title>Sign Up | HostPod</title>\r\n      </Helmet>\r\n      <div className=\"flex items-center w-full\">\r\n        <img src={logo} alt=\"logo\" className=\"w-24\" />\r\n        <h1 className=\"ml-5 text-2xl font-bold\">Sign Up</h1>\r\n      </div>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className=\"flex flex-col items-center mt-2 w-full\"\r\n      >\r\n        <div className=\"w-11/12\">\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div className=\"w-11/12\">\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div className=\"w-10/12 grid grid-cols-2 my-2 rounded-xl border-2 h-12 bg-gray-50 overflow-hidden\">\r\n          {Object.keys(UserRole).map((role, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"parent flex justify-center items-center relative hover:bg-gray-200 hover:text-lg\"\r\n            >\r\n              <input\r\n                ref={register({ required: true })}\r\n                type=\"radio\"\r\n                id={role}\r\n                name=\"role\"\r\n                value={role}\r\n                className=\"opacity-0 absolute w-full h-full\"\r\n              />\r\n              <label\r\n                htmlFor={role}\r\n                className=\"w-full h-full flex justify-center items-center\"\r\n              >\r\n                {role}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          {errors.email?.message ? (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          ) : (\r\n            errors.password?.message && (\r\n              <FormError errorMessage={errors.password?.message} />\r\n            )\r\n          )}\r\n          {createUserResult?.createUser.error && (\r\n            <FormError errorMessage={createUserResult.createUser.error} />\r\n          )}\r\n        </div>\r\n        <Button\r\n          canClick={formState.isValid}\r\n          loading={loading}\r\n          actionText={\"Sign Up\"}\r\n        />\r\n      </form>\r\n      <div className=\"mt-2\">\r\n        Already have an account?{\" \"}\r\n        <Link to=\"/login\" className=\"text-sm text-blue-600 hover:underline\">\r\n          Login now\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\button.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\listener\\podcasts.tsx",["103"],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\404.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\components\\header.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\hooks\\useMe.tsx",[],"C:\\Users\\md2eo\\Desktop\\nuber-eats-challenge-front\\src\\pages\\listener\\podcast.tsx",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":47,"column":25,"nodeType":"113","messageId":"114","endLine":47,"endColumn":30},{"ruleId":"111","severity":1,"message":"115","line":21,"column":17,"nodeType":"113","messageId":"114","endLine":21,"endColumn":24},{"ruleId":"111","severity":1,"message":"115","line":35,"column":17,"nodeType":"113","messageId":"114","endLine":35,"endColumn":24},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]